{"version":3,"file":"static/js/321.3dc57493.chunk.js","mappings":"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","sources":["components/api.js","pages/Home/Home.styled.js","pages/Movies/Movies.styled.js","pages/Movies/Movies.js"],"sourcesContent":["import axios from 'axios';\n\nconst options = {\n  method: 'GET',\n  params: { language: 'en-US' },\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5ZDU0NDY1MjVlYzhkODg3M2I1NGNlMzlkMTkxNmIyNCIsInN1YiI6IjY1NGZkYmIxZWE4NGM3MDExY2Q2ZWMxNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.CHpitEU01fQy31cfmeOhuWZ7DYDgqVg81PtP2Qkepuk',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const result = await axios\n    .request({\n      ...options,\n      url: 'https://api.themoviedb.org/3/trending/all/day',\n    })\n    .then(function (response) {\n      return response.data;\n    })\n    .catch(function (error) {\n      return error;\n    });\n\n  return result;\n};\n\nexport const fetchMovieDetails = async id => {\n  const result = await axios\n    .request({\n      ...options,\n      url: `https://api.themoviedb.org/3/movie/${id}`,\n    })\n    .then(function (response) {\n      return response.data;\n    })\n    .catch(function (error) {\n      return error;\n    });\n\n  return result;\n};\n\nexport const fetchMovieCast = async id => {\n  const result = axios\n    .request({\n      ...options,\n      url: `https://api.themoviedb.org/3/movie/${id}/credits`,\n    })\n    .then(function (response) {\n      return response.data;\n    })\n    .catch(function (error) {\n      return error;\n    });\n\n  return result;\n};\n\nexport const fetchMovieReviews = async id => {\n  const result = axios\n    .request({\n      ...options,\n      url: `https://api.themoviedb.org/3/movie/${id}/reviews`,\n    })\n    .then(function (response) {\n      return response.data;\n    })\n    .catch(function (error) {\n      return error;\n    });\n\n  return result;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const result = axios\n    .request({\n      ...options,\n      url: 'https://api.themoviedb.org/3/search/movie',\n      params: {\n        query: query,\n        include_adult: 'false',\n        language: 'en-US',\n        page: '1',\n      },\n    })\n    .then(function (response) {\n      return response.data;\n    })\n    .catch(function (error) {\n      return error;\n    });\n\n  return result;\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const HomeWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  padding: 20px 100px;\n`;\n\nexport const MoviesListWrapper = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n  flex-wrap: wrap;\n`;\n\nexport const MoviesItem = styled.li`\n  width: calc((100% - 60px) / 4);\n  height: 200px;\n  border-radius: 20px;\n  overflow: hidden;\n  transition: all 0.2s ease-in-out;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  object-fit: contain;\n  position: relative;\n\n  & > img {\n    display: block;\n    height: 100%;\n    width: 100%;\n\n    object-fit: cover;\n    object-position: 50% 50%;\n  }\n`;\n\nexport const MoviesItemInfo = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 150px;\n  z-index: 2;\n  background: rgb(0, 0, 0);\n  background: linear-gradient(\n    0deg,\n    rgba(0, 0, 0, 1) 20%,\n    rgba(0, 0, 0, 0.2763699229691877) 77%,\n    rgba(0, 0, 0, 0) 100%\n  );\n\n  padding: 20px;\n  display: flex;\n  align-items: flex-end;\n`;\n\nexport const MoviesItemText = styled.div`\nwidth: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 20px;\n`;\n\nexport const MoviesItemTitle = styled.p`\n  font-size: 16px;\n  font-weight: 700;\n  color: #e8e8e8;\n`;\n\nexport const MoviesItemRating= styled.div`\n  font-size: 14px;\n  font-weight: 500;\n  color: #e8e8e8;\n`;\n\n","import styled from 'styled-components';\n\nexport const MoviesWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  \n  gap: 40px;\n  padding: 20px 200px;\n`;\n\nexport const SearchBar = styled.div`\n  display: flex;\n  align-items: center;\n  \n`;\n\nexport const SearchInput = styled.input`\n  font-family: inherit;\n  font-size: inherit;\n  background-color: #f4f2f2;\n  border: none;\n  color: #646464;\n  padding: 10px 20px;\n  border-radius: 30px;\n  width: 200px;\n  margin-right: 10px;\n`;\n\nexport const SearchBtn = styled.button`\n  background-color: #f4f2f2;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  width: 38px;\n  height: 38px;\n`;\n","import { useEffect, useState } from 'react';\nimport {  useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchMoviesByQuery } from 'components/api';\nimport { MoviesWrapper, SearchBar, SearchBtn, SearchInput } from './Movies.styled';\nimport {\n  MoviesItem,\n  MoviesItemInfo,\n  MoviesItemRating,\n  MoviesItemText,\n  MoviesItemTitle,\n  MoviesListWrapper,\n  StyledLink,\n} from '../Home/Home.styled'\nimport { BiSearchAlt } from 'react-icons/bi';\n\nconst MoviesPage = () => {\n  const [moviesList, setMoviesList] = useState([]);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  let query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    handleFetch();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleInput = evt => {\n    const queryWord = evt.target.value.trim().toLowerCase();\n    query = queryWord;\n    const nextParams = queryWord !== '' ? { query: queryWord } : {};\n    setSearchParams(nextParams);\n  };\n\n  const handleSubmit = () => {\n    handleFetch();\n  };\n\n  async function handleFetch() {\n    const data = await fetchMoviesByQuery(query);\n    setMoviesList(data.results);\n    if (data.results.length === 0) {\n      alert('There are no movies found by your qury. Try the valid name.');\n    }\n  }\n  return (\n    <MoviesWrapper>\n      <SearchBar>\n        <SearchInput type=\"text\" value={query} onChange={handleInput} />\n        <SearchBtn onClick={handleSubmit}>\n          <BiSearchAlt size={20}/>\n        </SearchBtn>\n      </SearchBar>\n      {moviesList.length > 0 && (\n        <MoviesListWrapper>\n        {moviesList.map(({ title, name, id, poster_path, vote_average }) => {\n          return (\n            <MoviesItem key={id}>\n              <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                  alt=\"poster\"\n                />\n                <MoviesItemInfo>\n                  <MoviesItemText>\n                    <MoviesItemTitle>{name || title}</MoviesItemTitle>\n                    <MoviesItemRating>\n                      {vote_average.toFixed(1)}/10\n                    </MoviesItemRating>\n                  </MoviesItemText>\n                </MoviesItemInfo>\n              </StyledLink>\n            </MoviesItem>\n          );\n        })}\n      </MoviesListWrapper>\n      )}\n    </MoviesWrapper>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["options","method","params","language","headers","accept","Authorization","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","result","_context","prev","next","axios","_objectSpread","url","then","response","data","catch","error","sent","abrupt","stop","apply","arguments","fetchMovieDetails","_ref2","_callee2","id","_context2","concat","_x","fetchMovieCast","_ref3","_callee3","_context3","_x2","fetchMovieReviews","_ref4","_callee4","_context4","_x3","fetchMoviesByQuery","_ref5","_callee5","query","_context5","include_adult","page","_x4","HomeWrapper","styled","_templateObject","_taggedTemplateLiteral","MoviesListWrapper","_templateObject2","MoviesItem","_templateObject3","StyledLink","NavLink","_templateObject4","MoviesItemInfo","_templateObject5","MoviesItemText","_templateObject6","MoviesItemTitle","_templateObject7","MoviesItemRating","_templateObject8","MoviesWrapper","SearchBar","SearchInput","SearchBtn","_searchParams$get","_useState","useState","_useState2","_slicedToArray","moviesList","setMoviesList","location","useLocation","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","useEffect","handleFetch","_handleFetch","results","length","alert","_jsxs","children","_jsx","type","value","onChange","evt","queryWord","target","trim","toLowerCase","onClick","BiSearchAlt","size","map","title","name","poster_path","vote_average","to","state","from","src","alt","toFixed"],"sourceRoot":""}